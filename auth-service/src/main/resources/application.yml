server:
  port: 8080
  forward-headers-strategy: framework
#  servlet:
#    context-path: /auth

spring:
  application:
    name: auth-service

  # Data JPA settings
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL}
  messages:
    basename: i18n/messages
    encoding: UTF-8
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      ssl:
        enabled: true
  cache:
    type: redis
  #Kafka settings
  kafka:
    bootstrap-servers: ${KAFKA_HOST}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  #Github
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: ${GITHUB_CLIENT_ID}
            client-secret: ${GITHUB_CLIENT_SECRET}
            scope: read:user,user:email
            redirect-uri: ${DOMAIN}/login/oauth2/code/{registrationId}
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: openid, profile, email
        provider:
          github:
            authorization-uri: https://github.com/login/oauth/authorize
            token-uri: https://github.com/login/oauth/access_token
            user-info-uri: https://api.github.com/user
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

logging:
  level:
    org.springframework.security: DEBUG

# JWT config
jwt:
  secret_key: ${JWT_SECRET_KEY}
  refreshable_time: ${JWT_RT_EXPIRED}
  valid_time: ${JWT_AT_EXPIRED}

#Domain:
domain:
  fe: ${FE_DOMAIN}

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL}
    register-with-eureka: true # Other service can discover
    fetch-registry: true # Can discover other service
  instance:
    prefer-ip-address: true